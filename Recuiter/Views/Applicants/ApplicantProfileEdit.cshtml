@model Recruiter.ViewModels.ApplicantProfileViewModels

@{
	Layout = "~/Views/Shared/ProfileLayout.cshtml";
}

@{
	ViewBag.Title = "Applicant Profile";
}

<img src="~/Content/images/UserInterface.png" class="img-fluid topbanner mb-4" alt="user Interface">
<div class="container-fluid">
	<div class="row">
		<div class="col-sm-3" style="background-color: #fafafa;">
			<ul class="nav flex-column">
				<li class="nav-item border-bottom" id="profile">
					<a class="nav-link active text-dark" href="#"><i class="fas fa-user mr-1"></i>My Profile</a>
				</li>
				<li class="nav-item border-bottom">
					<a class="nav-link text-dark" href="#"><i class="fas fa-file-alt mr-1"></i>My Resume</a>
				</li>
				<li class="nav-item border-bottom" id="app_jobs">
					<a class="nav-link text-dark" href="#"><i class="fas fa-clipboard mr-1"></i>Applied Jobs</a>
				</li>
				<li class="nav-item border-bottom">
					<a class="nav-link text-dark" href="#"><i class="fas fa-bookmark mr-1"></i>Shortlisted Jobs</a>
				</li>
				<li class="nav-item  border-bottom"
					id="pass_change">
					<a class="nav-link text-dark" href="#"><i class="fas fa-lock mr-1"></i>Change Password</a>
				</li>
			</ul>
		</div>
        <div class="col-sm-9 alpha" style="min-height: 96rem;">
            <h5 class="mt-0">WELCOME STEELE</h5>
            <div class="media">
                <img src="~/Content/images/passport.jpg" class="align-self-start mr-3" alt="passport">
                <div class="media-body">
<img src="~/Content/images/UserInterface.png" class="img-fluid topbanner mb-4" alt="user Interface">
<div class="container-fluid">
	<div class="row">
		<div class="col-sm-3" style="background-color: #fafafa;">
			<ul class="nav flex-column">
				<li class="nav-item border-bottom" id="profile">
					<a class="nav-link active text-dark" href="#"><i class="fas fa-user mr-1"></i>My Profile</a>
				</li>
				<li class="nav-item border-bottom">
					<a class="nav-link text-dark" href="#"><i class="fas fa-file-alt mr-1"></i>My Resume</a>
				</li>
				<li class="nav-item border-bottom" id="app_jobs">
					<a class="nav-link text-dark" href="#"><i class="fas fa-clipboard mr-1"></i>Applied Jobs</a>
				</li>
				<li class="nav-item border-bottom">
					<a class="nav-link text-dark" href="#"><i class="fas fa-bookmark mr-1"></i>Shortlisted Jobs</a>
				</li>
				<li class="nav-item  border-bottom"
					id="pass_change">
					<a class="nav-link text-dark" href="#"><i class="fas fa-lock mr-1"></i>Change Password</a>
				</li>
				<li class="nav-item  border-bottom"
					id="pass_change">@Html.Action("Index", "Document","")
					<a class="nav-link text-dark" href="#"><i class="fas fa-lock mr-1"></i>Upload CV</a>
				</li>
				</ul>
			</div>
				


                    <div style=" padding-top: 5rem;">

                        <div>
                            <input type="submit" value="Browse" class="btn btn-II">
                            <p id="bot">Max file size is 1MB, Minimum dimension 270x210 and suitable files are jpg & png</p>
                        </div>
                    </div>

                </div>

            </div>


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @*<div>
                <h3>Upload File</h3>
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-10-" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ImagePath)
                        @Html.ValidationMessageFor(model => model.ImagePath)
                    </div>
                </div>
                @using (Html.BeginForm("Add", "Image", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <input type="file" name="file" />
                    <br /><br />
                    <input type="submit" value="Upload" class="btn btn-primary" />
                }
            </div>*@

                <div class="row mb-4">
                    <div class="col">
                        @Html.LabelFor(model => model.FirstName)

                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" }, @placeholder = "Enter First name" })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>


                    <div class="col">
                        @Html.LabelFor(model => model.LastName)

                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Last name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="row mb-4">
                    <div class="col">
                        @Html.LabelFor(model => model.JobTitle)

                        @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" }, @placeholder = "PHP Developer" })
                        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                    </div>


                    <div class="col">
                        @Html.LabelFor(model => model.Specialization)

                        @Html.EditorFor(model => model.Specialization, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Specialization" } })
                        @Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                @Html.LabelFor(model => model.DocumentId, "DocumentId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DocumentId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DocumentId, "", new { @class = "text-danger" })
                </div>
            </div>*@

                @*<div class="form-group">
                @Html.LabelFor(model => model.ImageId, "ImageId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ImageId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ImageId, "", new { @class = "text-danger" })
                </div>
            </div>*@





                <fieldset>
                    <legend>CONTACT INFORMATION</legend>
                    <div class="row mb-4">
                        <div class="col">
                            @Html.LabelFor(model => model.PhoneNumber)

                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" }, @placeholder = "+234 ... ... ...." })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>


                        <div class="col">
                            @Html.LabelFor(model => model.Email)

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter a valid email address" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row mb-4">
                        <div class="col">
                            @Html.LabelFor(model => model.Country)

                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>


                        <div class="col">
                            @Html.LabelFor(model => model.City)

                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
                <div class="form-group">
                    @Html.LabelFor(model => model.CompleteAddress)
                    <div>
                        @Html.EditorFor(model => model.CompleteAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompleteAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <fieldset>
                    <legend>EXTRA INFORMATION</legend>
                    <div class="row mb-4">
                        <div class="col">
                            @Html.LabelFor(model => model.YearsOfExperience)

                            @Html.DropDownList("Experience",
                    new SelectList(Enum.GetValues(typeof(ExperienceLevelType))),
                    "Select Experience",
                    new { @class = "form-control" })


                        </div>


                        <div class="col">
                            @Html.LabelFor(model => model.Age)

                            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row mb-4">
                        <div class="col">
                            @Html.LabelFor(model => model.Language)

                            @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                        </div>


                        <div class="col">

                            @Html.LabelFor(model => model.EducationLevel)
                            @Html.DropDownList("EducationLevel",
                    new SelectList(Enum.GetValues(typeof(MinimumQualificationType))),
                    "Select Education Level",
                    new { @class = "form-control" })
                        </div>


                    </div>
                </fieldset>


                <button type="button" class="btn btn-outline-secondary mx-1 mb-4" style="color:#f16722; border: 1px solid #f16722;">Update</button>


                <h5>Upload CV</h5>
                <div class="beta">

                    <div class="form-group">
                        @using (Html.BeginForm("Add", "Image", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <input type="file" name="file" />
                            <br /><br />

                            @*<input type="submit" value="Upload" class="btn btn-primary" />*@
                        }

                    </div>

                </div>

                <p id="mint">Supported Formats: DOC, DOCX, TXT, PDF & Max. File size: 5MB</p>
                <input type="submit" class="btn btn-outline-secondary mx-1 mb-4" style="color:#f16722; border: 1px solid #f16722;" value="Upload">
                <div class="form-group">

                    @Html.LabelFor(model => model.Bio)
                    <div>
                        @Html.TextArea("myTextArea", ""
                       , new { @class = "form-control", rows = 3 })

                        @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                    </div>
                </div>
                <button type="button" class="btn btn-outline-secondary mx-1 mb-4" style="color:#f16722; border: 1px solid #f16722;">Upload</button>


                @*<button type="button" class="btn btn-II mx-1">View Profile</button>

            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Create", "ApplicantProfilePage", new { id = Model.Id })
            </div>*@



            }

            @using (Html.BeginForm("ApplicantProfilePage", "Applicants"))
            {

                <input type="submit" value="View Profile" class="btn btn-II mx-1" />

            }
            @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
        </div>
	</div>
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>



