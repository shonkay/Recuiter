@model Recruiter.ViewModels.ApplicantProfileViewModels

@{
	Layout = "~/Views/Shared/ProfileLayout.cshtml";
}

@{
	ViewBag.Title = "Applicant Profile";
}

<img src="~/Content/images/UserInterface.png" class="img-fluid topbanner mb-4" alt="user Interface">
<div class="container-fluid">
	<div class="row">
		<div class="col-sm-3" style="background-color: #fafafa;">
			<ul class="nav flex-column">
				<li class="nav-item border-bottom" id="profile">
					@*<a class="nav-link active text-dark" href="#"><i class="fas fa-user mr-1"></i>My Profile</a>*@ <a href="@Url.Action("ApplicantProfilePage", "Applicants")" class="nav-link text-dark"><i class="fas fa-user mr-1"></i>My Profile</a>
				</li>
				<li class="nav-item border-bottom">
					<a class="nav-link text-dark" href="#"><i class="fas fa-file-alt mr-1"></i>My Resume</a>
				</li>
				<li class="nav-item border-bottom">
					<a class="nav-link text-dark" href="#"><i class="fas fa-clipboard mr-1"></i>Applied Jobs</a>
				</li>
				<li class="nav-item border-bottom">
					<a class="nav-link text-dark" href="#"><i class="fas fa-bookmark mr-1"></i>Shortlisted Jobs</a>
				</li>
				<li class="nav-item  border-bottom">
					@*<a class="nav-link text-dark" href="#"><i class="fas fa-lock mr-1"></i>Change Password</a>*@ <a href="@Url.Action("ChangePassword", "Account")" class="nav-link text-dark"><i class="fas fa-lock mr-1"></i>Change Password</a>
				</li>
				<li class="nav-item  border-bottom">
					@*<a class="nav-link text-dark" href="#"><i class="fas fa-lock mr-1"></i>Upload CV</a>*@ <a href="@Url.Action("Index", "Document")" class="nav-link text-dark"><i class="fas fa-lock mr-1"></i>Upload CV</a>
				</li>
			

			</ul>
		</div>
		<div class="col-sm-9 alpha" style="min-height: 98rem;">
			<h5 class="mt-0">WELCOME STEELE</h5>
			<div class="media">
				@*<img src="@Url.Content(Model.ImagePath)" class="align-self-start mr-3" alt="passport">*@
				<div class="media-body">
					<div style=" padding-top: 5rem;">
						<button type="button" class="btn btn-II ">Browse</button>
						<div>
							<p id="bot">Max file size is 1MB, Minimum dimension 270x210 and suitable files are jpg & png</p>
						</div>
					</div>

				</div>
			</div>


			@*@using (Html.BeginForm("ApplicantProfileEdit", "Applicants"))
		{*@
			@using (Html.BeginForm("AddImage", "Applicants", FormMethod.Post, new { enctype = "multipart/form-data" }))
			{
				@Html.AntiForgeryToken()


				@Html.ValidationSummary(true, "", new { @class = "text-danger" })

				<div>

					<h3>Upload Image</h3>
					<div class="form-group">
						@Html.LabelFor(model => model.Title, new { @class = "control-label col-md-10-" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.ImagePath)
							@Html.ValidationMessageFor(model => model.ImagePath)
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.ImagePath, new { @class = "control -label col-md-5" })
						<div class="col-md-10">

							<input type="file" name="ImageFile" />
							<br /><br />
							<input type="submit" value="Upload" class="btn btn-primary" />

						</div>
					</div>
				</div>
				@*<div>
					<dl class="dl-horizontal">
						<dt>
							@Html.DisplayNameFor(model => model.Title)
						</dt>
						<dd>
							@Html.DisplayFor(model => model.Title)
						</dd>
						<dd>
							<img src="@Url.Content(Model.ImagePath)" width="250" height="250" />
						</dd>
					</dl>
				</div>*@

				<div class="row mb-4">
					<div class="col">
						@Html.LabelFor(model => model.FirstName)

						@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" }, @placeholder = "Enter First name" })
						@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
					</div>


					<div class="col">
						@Html.LabelFor(model => model.LastName)

						@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Last name" } })
						@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
					</div>
				</div>


				<div class="row mb-4">
					<div class="col">
						@Html.LabelFor(model => model.JobTitle)

						@Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" }, @placeholder = "PHP Developer" })
						@Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
					</div>


					<div class="col">
						@Html.LabelFor(model => model.Specialization)

						@Html.EditorFor(model => model.Specialization, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Specialization" } })
						@Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger" })
					</div>
				</div>
				@*<div class="form-group">
				@Html.LabelFor(model => model.DocumentId, "DocumentId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("DocumentId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.DocumentId, "", new { @class = "text-danger" })
				</div>
			</div>*@

				@*<div class="form-group">
				@Html.LabelFor(model => model.ImageId, "ImageId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("ImageId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.ImageId, "", new { @class = "text-danger" })
				</div>
			</div>*@





				<fieldset>
					<legend>CONTACT INFORMATION</legend>
					<div class="row mb-4">
						<div class="col">
							@Html.LabelFor(model => model.PhoneNumber)

							@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" }, @placeholder = "+234 ... ... ...." })
							@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
						</div>


						<div class="col">
							@Html.LabelFor(model => model.Email)

							@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter a valid email address" } })
							@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
						</div>
					</div>


					<div class="row mb-4">
						<div class="col">
							@Html.LabelFor(model => model.Country)

							@Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
						</div>


						<div class="col">
							@Html.LabelFor(model => model.City)

							@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
						</div>
					</div>
				</fieldset>
				<div class="form-group">
					@Html.LabelFor(model => model.CompleteAddress)
					<div>
						@Html.EditorFor(model => model.CompleteAddress, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CompleteAddress, "", new { @class = "text-danger" })
					</div>
				</div>

				<fieldset>
					<legend>EXTRA INFORMATION</legend>
					<div class="row mb-4">
						<div class="col">
							@Html.LabelFor(model => model.YearsOfExperience)

							@Html.EnumDropDownListFor(x => x.YearsOfExperience,
                        new { @class = "form-control" })

							@*@Html.DropDownList("Experience",
						new SelectList(Enum.GetValues(typeof(ExperienceLevelType))),
						"Select Experience",
						new { @class = "form-control" })*@



						</div>


						<div class="col">
							@Html.LabelFor(model => model.Age)

							@Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
						</div>
					</div>


					<div class="row mb-4">
						<div class="col">
							@Html.LabelFor(model => model.Language)

							@Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
						</div>


						<div class="col">

							@Html.LabelFor(model => model.EducationLevel)
							@Html.DropDownList("EducationLevel",
					new SelectList(Enum.GetValues(typeof(MinimumQualificationType))),
					"Select Education Level",
					new { @class = "form-control" })
						</div>


					</div>
				</fieldset>

				<p id="mint">Supported Formats: DOC, DOCX, TXT, PDF & Max. File size: 5MB</p>
				<button type="button" class="btn btn-outline-secondary mx-1 mb-4" style="color:#f16722; border: 1px solid #f16722;">Update</button>
				<fieldset>

					<div class="form-group">

						@Html.LabelFor(model => model.Bio)
						<div>
							@Html.TextArea("myTextArea", ""
						   , new { @class = "form-control", rows = 3})

							@Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
						</div>
					</div>
				</fieldset>




				@*<button type="button" class="btn btn-II mx-1">View Profile</button>

			<div class="col-md-offset-2 col-md-10">
				@Html.ActionLink("Create", "ApplicantProfilePage", new { id = Model.Id })
			</div>*@




				<input type="submit" value="View Profile" class="btn btn-II mx-1" />

			}
			@*<div>
			@Html.ActionLink("Back to List", "Index")
		</div>*@
		</div>
	</div>
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>



